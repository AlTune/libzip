.\" $NiH: zip_open.mdoc,v 1.9 2003/10/03 12:04:09 dillo Exp $
.\"
.\" zip_open.mdoc -- open zip archive
.\" Copyright (C) 2003 Dieter Baron and Thomas Klausner
.\"
.\" This file is part of libzip, a library to manipulate ZIP archives.
.\" The authors can be contacted at <nih@giga.or.at>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\" 3. The names of the authors may not be used to endorse or promote
.\"    products derived from this software without specific prior
.\"    written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS
.\" OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
.\" GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
.\" IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
.\" IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd October 3, 2003
.Dt ZIP_OPEN 3
.Os
.Sh NAME
.Nm zip_open
.Nd open zip archive
.Sh LIBRARY
libzip (-lzip)
.Sh SYNOPSIS
.In zip.h
.Ft struct zip *
.Fn zip_open "const char *path" "int flags" "int *errorp"
.Sh DESCRIPTION
The zip archive specified by
.Ar path
is opened and a pointer to a
.\" XXX: also marks up ,
.Ft struct zip ,
used to manipulate the archive, is returned.
The
.Fa flags
are specified by
.Em or Ns No 'ing
the following values, or 0 for none of them.
.Bl -tag -offset indent -width ZIP_CHECKCONS
.It Dv ZIP_CREATE
Create the archive if it does not exist.
.It Dv ZIP_EXCL
Error if archive already exists.
.It Dv ZIP_CHECKCONS
Perform additional consistency checks on the archive, and error if
they fail.
.Pp If an error occurs and
.Ar errorp
is non-NULL, it will be set to the corresponding error code.
.El
.Sh RETURN VALUES
Upon successful completion
.Fn zip_open
returns a
.Ft struct zip
pointer.
Otherwise,
.Dv NULL
is returned and
.Ar *errorp
is set to indicate the error.
.Sh ERRORS
The named archive is opened unless:
.Bl -tag -width Er
.It Bq Er ZERR_EXISTS
The named file exists and
.Dv ZIP_EXCL
is set.
.It Bq Er ZERR_INCONS
Inconsistencies were found in the named archive and
.Dv ZIP_CHECKCONS
was specified.
.It Bq Er ZERR_INVAL
The
.Ar path
argument is
.Dv NULL .
.It Bq Er ZERR_MEMORY
Required memory could not be allocated.
.It Bq Er ZERR_NOENT
The named file does not exist and
.Dv ZIP_CREATE
is not set.
.It Bq Er ZERR_NOZIP
The named file is not a zip archive.
.It Bq Er ZERR_OPEN
The named file could not be opened.
.It Bq Er ZERR_READ
A read error occurred; see
.Va errno
for details.
.It Bq Er ZERR_SEEK
The named file does not allow seeks.
.El
.Sh SEE ALSO
.Xr zip_close 3
